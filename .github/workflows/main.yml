on:
  push:

env:
  IMAGE_NAME: korsakjakub/pco-api
    
jobs:
  infer:
    name: Infer branches
    runs-on: ubuntu-latest
    outputs:
      branchType: ${{ steps.infer.outputs.branchType }}
    steps:
     - uses: actions/github-script@v6
       id: infer
       with:
         script: |
           const childProcess = require("child_process");
           const branchName = '${{ github.ref_name }}';
           const branchType = branchName.split('-')[0];
           core.setOutput('branchType', branchType);
           console.table({ branchType });

  test-and-build:
    needs: infer
    name: Build the container image
    runs-on: ubuntu-latest
    if: needs.infer.outputs.branchType == "feature"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '20'
          cache: 'maven'
      - run: make test
      - run: make docker

  release-container-image:
    needs: infer
    name: Release the container image
    runs-on: ubuntu-latest
    if: needs.infer.outputs.branchType == "main"
    steps:
      - uses: actions/checkout@v3
      - name: Get short sha
        id: short-sha
        run: echo "sha=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '20'
          cache: 'maven'
      - name: Docker Login
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.ARTIFACTORY_USERNAME }}
          password: ${{ secrets.ARTIFACTORY_PASSWORD }}
      - name: Build and push the image with jib
        run: mvn compile jib:build -Dimage=${{ env.IMAGE_NAME }}:${{ steps.short-sha.outputs.sha }}
